
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ATRIBUIR BREAK CASE CHAR CLASS COMMA CONST DEFAULT DIVIDIR DO ELSE FALSE FINAL FLOAT FOR FUNCTION ID IF IGUAL INT INTEGER LCHAV LCON LITERAL_STRING LPAREN MAIOR MAIORI MENOR MENORI NEG NOT NULL NUMBER OR PCOMMA PONTOS RCHAV RCON RESTO RETURN RPAREN SOMA SOMASOMA STRING SUBSUB SUBTRAIR SWITCH TRUE VAR VEZES VOID WHILE topLevel : variableDeclaration PCOMMA\n                 | variableDeclaration PCOMMA topLevel\n                 | functionSignature functionBody\n                 | functionSignature functionBody topLevel\n                  variableDeclaration : declaredIdentifier \n                            | variableDeclaration COMMA ID  declaredIdentifier : voidOrType ID \n                           | IDvoidOrType : type\n                  | VOID type : VAR\n             | INT\n             | FLOAT\n             | CHAR \n             | STRING functionSignature : ID formalParameterList\n                          | voidOrType ID formalParameterList  formalParameterList : LPAREN RPAREN \n                            | LPAREN normalFormalParameters RPAREN  normalFormalParameters : simpleFormalParameter \n                               | simpleFormalParameter COMMA normalFormalParameters  simpleFormalParameter : voidOrType ID\n                              | expression functionBody : block block : LCHAV statements RCHAV              \n              | LCHAV RCHAV statements : statement statements\n                   | statement  statement : nonLabelledStatement  nonLabelledStatement : block\n                             | expressionStatement\n                             | localVariableDeclaration\n                             | returnStatement\n                             | ifStatement\n                             | forStatement\n                             | whileStatement\n                             | doStatement\n                             | switchStatement \n                             | breakStatement  localVariableDeclaration : initializedVariableDeclaration PCOMMA initializedVariableDeclaration : declaredIdentifier\n                                       | declaredIdentifier ATRIBUIR expression\n                                       | declaredIdentifier ATRIBUIR listLiteral\n                                       | listLiteralID ATRIBUIR expression\n                                        expressionStatement : PCOMMA\n                            | expression PCOMMA  expression : orExpression orExpression : andExpression\n                     | orExpression OR andExpressionandExpression : equalityExpression\n                     | andExpression AND equalityExpressionequalityExpression : relacionalExpression\n                          | equalityExpression IGUAL relacionalExpression \n                          | equalityExpression NEG relacionalExpression relacionalExpression : addExpression\n                    | relacionalExpression MENOR addExpression\n                    | relacionalExpression MAIOR addExpression\n                    | relacionalExpression MENORI addExpression\n                    | relacionalExpression MAIORI addExpressionaddExpression : multExpression \n                     | addExpression SOMA multExpression\n                     | addExpression SUBTRAIR multExpressionmultExpression : unaryExpression \n                      | multExpression VEZES unaryExpression\n                      | multExpression DIVIDIR unaryExpression\n                      | multExpression RESTO unaryExpressionunaryExpression : primary\n                       | functionCall\n                       | unaryExpression SOMASOMA\n                       | unaryExpression SUBSUBfunctionCall : functionSignature primary : literal \n                | LPAREN expression RPAREN  literal : ID \n                | booleanLiteral \n                | listLiteralID\n                | NUMBER\n                | LITERAL_STRINGlistLiteral : LCON expressionList RCON listLiteralID : ID listLiteral  booleanLiteral : TRUE \n                       | FALSE  expressionList : expression COMMA\n                       | expression\n                       | expression COMMA expressionList  returnStatement : RETURN PCOMMA \n                        | RETURN expression PCOMMAifStatement : IF LPAREN expression RPAREN statement \n                   | IF LPAREN expression RPAREN statement ELSE statement  forStatement : FOR LPAREN forLoopParts RPAREN statement  forLoopParts : forInitializerStatement PCOMMA \n                     | forInitializerStatement PCOMMA expressionList \n                     | forInitializerStatement expression PCOMMA \n                     | forInitializerStatement expression PCOMMA expressionList  forInitializerStatement : localVariableDeclaration \n                                | PCOMMA \n                                | expression PCOMMA  whileStatement : WHILE LPAREN expression RPAREN statement doStatement : DO statement WHILE LPAREN expression RPAREN PCOMMA  switchStatement : SWITCH LPAREN expression RPAREN LCHAV switchCaseRepetition RCHAV \n                        | SWITCH LPAREN expression RPAREN LCHAV switchCaseRepetition defaultCase RCHAV switchCaseRepetition : switchCase switchCaseRepetition\n                             | switchCase  switchCase : CASE expression PONTOS statements \n                   | label switchCase defaultCase : DEFAULT PONTOS statements \n                    | label defaultCase label : ID PONTOS  breakStatement : BREAK PCOMMA \n                       | BREAK ID PCOMMA'
    
_lr_action_items = {'ID':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,44,47,49,55,73,78,79,80,81,82,84,85,87,88,90,91,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,114,116,121,122,124,128,148,149,150,152,153,154,157,158,159,161,162,164,166,169,170,171,172,174,175,176,179,180,182,183,184,185,187,189,],[5,21,-9,-10,-11,-12,-13,-14,-15,5,23,5,-24,50,74,-26,50,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,74,74,50,92,99,115,-25,-27,-46,-40,-86,117,74,50,74,74,-109,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-87,74,-96,-95,-110,50,50,74,-97,50,74,74,-88,-90,74,-98,173,50,173,173,74,173,-89,-99,-100,173,-102,-105,-108,-101,50,50,-104,]),'VOID':([0,14,16,17,18,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,44,47,78,80,81,82,85,87,88,90,91,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,114,116,121,122,124,128,148,149,150,152,153,154,157,158,159,161,162,166,171,174,175,176,184,185,187,],[8,8,8,-24,8,8,-26,8,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,8,8,8,-25,-46,-40,-86,8,8,8,8,-109,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-87,8,-96,-95,-110,8,8,8,-97,8,8,8,-88,-90,8,-98,8,8,-89,-99,-100,-101,8,8,]),'VAR':([0,14,16,17,18,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,44,47,78,80,81,82,85,87,88,90,91,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,114,116,121,122,124,128,148,149,150,152,153,154,157,158,159,161,162,166,171,174,175,176,184,185,187,],[9,9,9,-24,9,9,-26,9,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,9,9,9,-25,-46,-40,-86,9,9,9,9,-109,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-87,9,-96,-95,-110,9,9,9,-97,9,9,9,-88,-90,9,-98,9,9,-89,-99,-100,-101,9,9,]),'INT':([0,14,16,17,18,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,44,47,78,80,81,82,85,87,88,90,91,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,114,116,121,122,124,128,148,149,150,152,153,154,157,158,159,161,162,166,171,174,175,176,184,185,187,],[10,10,10,-24,10,10,-26,10,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,10,10,10,-25,-46,-40,-86,10,10,10,10,-109,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-87,10,-96,-95,-110,10,10,10,-97,10,10,10,-88,-90,10,-98,10,10,-89,-99,-100,-101,10,10,]),'FLOAT':([0,14,16,17,18,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,44,47,78,80,81,82,85,87,88,90,91,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,114,116,121,122,124,128,148,149,150,152,153,154,157,158,159,161,162,166,171,174,175,176,184,185,187,],[11,11,11,-24,11,11,-26,11,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,11,11,11,-25,-46,-40,-86,11,11,11,11,-109,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-87,11,-96,-95,-110,11,11,11,-97,11,11,11,-88,-90,11,-98,11,11,-89,-99,-100,-101,11,11,]),'CHAR':([0,14,16,17,18,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,44,47,78,80,81,82,85,87,88,90,91,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,114,116,121,122,124,128,148,149,150,152,153,154,157,158,159,161,162,166,171,174,175,176,184,185,187,],[12,12,12,-24,12,12,-26,12,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,12,12,12,-25,-46,-40,-86,12,12,12,12,-109,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-87,12,-96,-95,-110,12,12,12,-97,12,12,12,-88,-90,12,-98,12,12,-89,-99,-100,-101,12,12,]),'STRING':([0,14,16,17,18,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,44,47,78,80,81,82,85,87,88,90,91,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,114,116,121,122,124,128,148,149,150,152,153,154,157,158,159,161,162,166,171,174,175,176,184,185,187,],[13,13,13,-24,13,13,-26,13,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,13,13,13,-25,-46,-40,-86,13,13,13,13,-109,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-87,13,-96,-95,-110,13,13,13,-97,13,13,13,-88,-90,13,-98,13,13,-89,-99,-100,-101,13,13,]),'$end':([1,14,16,17,22,24,26,78,],[0,-1,-3,-24,-2,-4,-26,-25,]),'PCOMMA':([2,4,5,18,19,21,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,76,77,78,80,81,82,83,87,91,92,93,99,111,112,113,116,119,121,122,123,124,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,151,152,153,156,158,159,162,166,168,174,175,176,184,185,187,],[14,-5,-8,39,-16,-7,-6,-26,39,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,80,81,82,39,91,-8,-47,-41,-76,-48,-50,-52,-55,-60,-63,-67,-68,-72,-71,-75,-77,-78,-81,-82,-18,-74,-76,-17,-25,-46,-40,-86,116,122,-109,128,-80,-7,-69,-70,-19,-87,-73,150,-96,152,-95,-110,-49,-42,-43,-44,-51,-53,-54,-56,-57,-58,-59,-61,-62,-64,-65,-66,39,39,161,-97,39,-79,-88,-90,-98,39,175,-89,-99,-100,-101,39,39,]),'COMMA':([2,4,5,19,21,23,51,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,74,75,76,77,93,111,112,113,115,119,130,131,135,136,137,138,139,140,141,142,143,144,145,146,156,],[15,-5,-8,-16,-7,-6,-47,-48,-50,-52,-55,-60,-63,-67,-68,-72,-71,-75,-77,-78,-81,-82,-18,114,-74,-23,-76,-17,-80,-69,-70,-19,-22,-73,157,-49,-51,-53,-54,-56,-57,-58,-59,-61,-62,-64,-65,-66,-79,]),'LCHAV':([3,18,19,26,27,28,29,30,31,32,33,34,35,36,37,38,39,47,70,77,78,80,81,82,91,113,116,128,148,149,153,155,158,159,162,166,174,175,176,184,185,187,],[18,18,-16,-26,18,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,18,-18,-17,-25,-46,-40,-86,-109,-19,-87,-110,18,18,18,164,-88,-90,-98,18,-89,-99,-100,-101,18,18,]),'LPAREN':([5,18,20,21,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,50,74,78,80,81,82,85,87,88,90,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,117,121,122,124,126,128,148,149,150,152,153,154,157,158,159,161,162,166,171,174,175,176,184,185,187,],[20,44,44,20,-26,44,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,44,85,44,87,88,44,90,20,20,-25,-46,-40,-86,44,44,44,44,-109,44,44,44,44,44,20,44,44,44,44,44,44,44,44,44,44,44,44,20,-87,20,44,-96,-95,154,-110,44,44,44,-97,44,44,44,-88,-90,44,-98,44,44,-89,-99,-100,-101,44,44,]),'RCHAV':([18,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,78,79,80,81,82,91,116,128,158,159,162,169,170,174,175,176,177,180,182,184,186,188,189,],[26,78,-26,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,-25,-27,-46,-40,-86,-109,-87,-110,-88,-90,-98,176,-103,-89,-99,-100,184,-102,-105,-101,-107,-106,-104,]),'RETURN':([18,26,27,28,29,30,31,32,33,34,35,36,37,38,39,47,78,80,81,82,91,116,128,148,149,153,158,159,162,166,174,175,176,184,185,187,],[42,-26,42,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,42,-25,-46,-40,-86,-109,-87,-110,42,42,42,-88,-90,-98,42,-89,-99,-100,-101,42,42,]),'IF':([18,26,27,28,29,30,31,32,33,34,35,36,37,38,39,47,78,80,81,82,91,116,128,148,149,153,158,159,162,166,174,175,176,184,185,187,],[43,-26,43,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,43,-25,-46,-40,-86,-109,-87,-110,43,43,43,-88,-90,-98,43,-89,-99,-100,-101,43,43,]),'FOR':([18,26,27,28,29,30,31,32,33,34,35,36,37,38,39,47,78,80,81,82,91,116,128,148,149,153,158,159,162,166,174,175,176,184,185,187,],[45,-26,45,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,45,-25,-46,-40,-86,-109,-87,-110,45,45,45,-88,-90,-98,45,-89,-99,-100,-101,45,45,]),'WHILE':([18,26,27,28,29,30,31,32,33,34,35,36,37,38,39,47,78,80,81,82,89,91,116,128,148,149,153,158,159,162,166,174,175,176,184,185,187,],[46,-26,46,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,46,-25,-46,-40,-86,126,-109,-87,-110,46,46,46,-88,-90,-98,46,-89,-99,-100,-101,46,46,]),'DO':([18,26,27,28,29,30,31,32,33,34,35,36,37,38,39,47,78,80,81,82,91,116,128,148,149,153,158,159,162,166,174,175,176,184,185,187,],[47,-26,47,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,47,-25,-46,-40,-86,-109,-87,-110,47,47,47,-88,-90,-98,47,-89,-99,-100,-101,47,47,]),'SWITCH':([18,26,27,28,29,30,31,32,33,34,35,36,37,38,39,47,78,80,81,82,91,116,128,148,149,153,158,159,162,166,174,175,176,184,185,187,],[48,-26,48,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,48,-25,-46,-40,-86,-109,-87,-110,48,48,48,-88,-90,-98,48,-89,-99,-100,-101,48,48,]),'BREAK':([18,26,27,28,29,30,31,32,33,34,35,36,37,38,39,47,78,80,81,82,91,116,128,148,149,153,158,159,162,166,174,175,176,184,185,187,],[49,-26,49,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,49,-25,-46,-40,-86,-109,-87,-110,49,49,49,-88,-90,-98,49,-89,-99,-100,-101,49,49,]),'NUMBER':([18,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,44,47,78,80,81,82,85,87,88,90,91,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,114,116,121,122,124,128,148,149,150,152,153,154,157,158,159,161,162,166,171,174,175,176,184,185,187,],[66,66,-26,66,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,66,66,66,-25,-46,-40,-86,66,66,66,66,-109,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-87,66,-96,-95,-110,66,66,66,-97,66,66,66,-88,-90,66,-98,66,66,-89,-99,-100,-101,66,66,]),'LITERAL_STRING':([18,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,44,47,78,80,81,82,85,87,88,90,91,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,114,116,121,122,124,128,148,149,150,152,153,154,157,158,159,161,162,166,171,174,175,176,184,185,187,],[67,67,-26,67,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,67,67,67,-25,-46,-40,-86,67,67,67,67,-109,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-87,67,-96,-95,-110,67,67,67,-97,67,67,67,-88,-90,67,-98,67,67,-89,-99,-100,-101,67,67,]),'TRUE':([18,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,44,47,78,80,81,82,85,87,88,90,91,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,114,116,121,122,124,128,148,149,150,152,153,154,157,158,159,161,162,166,171,174,175,176,184,185,187,],[68,68,-26,68,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,68,68,68,-25,-46,-40,-86,68,68,68,68,-109,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-87,68,-96,-95,-110,68,68,68,-97,68,68,68,-88,-90,68,-98,68,68,-89,-99,-100,-101,68,68,]),'FALSE':([18,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,44,47,78,80,81,82,85,87,88,90,91,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,114,116,121,122,124,128,148,149,150,152,153,154,157,158,159,161,162,166,171,174,175,176,184,185,187,],[69,69,-26,69,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,69,69,69,-25,-46,-40,-86,69,69,69,69,-109,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-87,69,-96,-95,-110,69,69,69,-97,69,69,69,-88,-90,69,-98,69,69,-89,-99,-100,-101,69,69,]),'SOMASOMA':([19,50,53,60,61,62,63,64,65,66,67,68,69,70,74,76,77,93,111,112,113,119,144,145,146,156,],[-16,-74,-76,111,-67,-68,-72,-71,-75,-77,-78,-81,-82,-18,-74,-76,-17,-80,-69,-70,-19,-73,111,111,111,-79,]),'SUBSUB':([19,50,53,60,61,62,63,64,65,66,67,68,69,70,74,76,77,93,111,112,113,119,144,145,146,156,],[-16,-74,-76,112,-67,-68,-72,-71,-75,-77,-78,-81,-82,-18,-74,-76,-17,-80,-69,-70,-19,-73,112,112,112,-79,]),'VEZES':([19,50,53,59,60,61,62,63,64,65,66,67,68,69,70,74,76,77,93,111,112,113,119,142,143,144,145,146,156,],[-16,-74,-76,108,-63,-67,-68,-72,-71,-75,-77,-78,-81,-82,-18,-74,-76,-17,-80,-69,-70,-19,-73,108,108,-64,-65,-66,-79,]),'DIVIDIR':([19,50,53,59,60,61,62,63,64,65,66,67,68,69,70,74,76,77,93,111,112,113,119,142,143,144,145,146,156,],[-16,-74,-76,109,-63,-67,-68,-72,-71,-75,-77,-78,-81,-82,-18,-74,-76,-17,-80,-69,-70,-19,-73,109,109,-64,-65,-66,-79,]),'RESTO':([19,50,53,59,60,61,62,63,64,65,66,67,68,69,70,74,76,77,93,111,112,113,119,142,143,144,145,146,156,],[-16,-74,-76,110,-63,-67,-68,-72,-71,-75,-77,-78,-81,-82,-18,-74,-76,-17,-80,-69,-70,-19,-73,110,110,-64,-65,-66,-79,]),'SOMA':([19,50,53,58,59,60,61,62,63,64,65,66,67,68,69,70,74,76,77,93,111,112,113,119,138,139,140,141,142,143,144,145,146,156,],[-16,-74,-76,106,-60,-63,-67,-68,-72,-71,-75,-77,-78,-81,-82,-18,-74,-76,-17,-80,-69,-70,-19,-73,106,106,106,106,-61,-62,-64,-65,-66,-79,]),'SUBTRAIR':([19,50,53,58,59,60,61,62,63,64,65,66,67,68,69,70,74,76,77,93,111,112,113,119,138,139,140,141,142,143,144,145,146,156,],[-16,-74,-76,107,-60,-63,-67,-68,-72,-71,-75,-77,-78,-81,-82,-18,-74,-76,-17,-80,-69,-70,-19,-73,107,107,107,107,-61,-62,-64,-65,-66,-79,]),'MENOR':([19,50,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,76,77,93,111,112,113,119,136,137,138,139,140,141,142,143,144,145,146,156,],[-16,-74,-76,102,-55,-60,-63,-67,-68,-72,-71,-75,-77,-78,-81,-82,-18,-74,-76,-17,-80,-69,-70,-19,-73,102,102,-56,-57,-58,-59,-61,-62,-64,-65,-66,-79,]),'MAIOR':([19,50,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,76,77,93,111,112,113,119,136,137,138,139,140,141,142,143,144,145,146,156,],[-16,-74,-76,103,-55,-60,-63,-67,-68,-72,-71,-75,-77,-78,-81,-82,-18,-74,-76,-17,-80,-69,-70,-19,-73,103,103,-56,-57,-58,-59,-61,-62,-64,-65,-66,-79,]),'MENORI':([19,50,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,76,77,93,111,112,113,119,136,137,138,139,140,141,142,143,144,145,146,156,],[-16,-74,-76,104,-55,-60,-63,-67,-68,-72,-71,-75,-77,-78,-81,-82,-18,-74,-76,-17,-80,-69,-70,-19,-73,104,104,-56,-57,-58,-59,-61,-62,-64,-65,-66,-79,]),'MAIORI':([19,50,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,76,77,93,111,112,113,119,136,137,138,139,140,141,142,143,144,145,146,156,],[-16,-74,-76,105,-55,-60,-63,-67,-68,-72,-71,-75,-77,-78,-81,-82,-18,-74,-76,-17,-80,-69,-70,-19,-73,105,105,-56,-57,-58,-59,-61,-62,-64,-65,-66,-79,]),'IGUAL':([19,50,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,76,77,93,111,112,113,119,135,136,137,138,139,140,141,142,143,144,145,146,156,],[-16,-74,-76,100,-52,-55,-60,-63,-67,-68,-72,-71,-75,-77,-78,-81,-82,-18,-74,-76,-17,-80,-69,-70,-19,-73,100,-53,-54,-56,-57,-58,-59,-61,-62,-64,-65,-66,-79,]),'NEG':([19,50,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,76,77,93,111,112,113,119,135,136,137,138,139,140,141,142,143,144,145,146,156,],[-16,-74,-76,101,-52,-55,-60,-63,-67,-68,-72,-71,-75,-77,-78,-81,-82,-18,-74,-76,-17,-80,-69,-70,-19,-73,101,-53,-54,-56,-57,-58,-59,-61,-62,-64,-65,-66,-79,]),'AND':([19,50,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,76,77,93,111,112,113,119,131,135,136,137,138,139,140,141,142,143,144,145,146,156,],[-16,-74,-76,98,-50,-52,-55,-60,-63,-67,-68,-72,-71,-75,-77,-78,-81,-82,-18,-74,-76,-17,-80,-69,-70,-19,-73,98,-51,-53,-54,-56,-57,-58,-59,-61,-62,-64,-65,-66,-79,]),'OR':([19,50,51,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,76,77,93,111,112,113,119,131,135,136,137,138,139,140,141,142,143,144,145,146,156,],[-16,-74,95,-76,-48,-50,-52,-55,-60,-63,-67,-68,-72,-71,-75,-77,-78,-81,-82,-18,-74,-76,-17,-80,-69,-70,-19,-73,-49,-51,-53,-54,-56,-57,-58,-59,-61,-62,-64,-65,-66,-79,]),'RPAREN':([19,20,51,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,86,93,111,112,113,115,118,119,120,125,127,130,131,135,136,137,138,139,140,141,142,143,144,145,146,147,150,156,157,160,161,163,165,167,],[-16,70,-47,-48,-50,-52,-55,-60,-63,-67,-68,-72,-71,-75,-77,-78,-81,-82,-18,113,-20,-74,-23,-76,-17,119,-80,-69,-70,-19,-22,148,-73,149,153,155,-84,-49,-51,-53,-54,-56,-57,-58,-59,-61,-62,-64,-65,-66,-21,-91,-79,-83,-92,-93,168,-85,-94,]),'RCON':([19,51,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,76,77,93,111,112,113,119,129,130,131,135,136,137,138,139,140,141,142,143,144,145,146,156,157,165,],[-16,-47,-48,-50,-52,-55,-60,-63,-67,-68,-72,-71,-75,-77,-78,-81,-82,-18,-74,-76,-17,-80,-69,-70,-19,-73,156,-84,-49,-51,-53,-54,-56,-57,-58,-59,-61,-62,-64,-65,-66,-79,-83,-85,]),'PONTOS':([19,51,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,76,77,93,111,112,113,119,131,135,136,137,138,139,140,141,142,143,144,145,146,156,173,178,181,],[-16,-47,-48,-50,-52,-55,-60,-63,-67,-68,-72,-71,-75,-77,-78,-81,-82,-18,-74,-76,-17,-80,-69,-70,-19,-73,-49,-51,-53,-54,-56,-57,-58,-59,-61,-62,-64,-65,-66,-79,183,185,187,]),'CASE':([26,27,28,29,30,31,32,33,34,35,36,37,38,39,78,79,80,81,82,91,116,128,158,159,162,164,170,172,174,175,176,182,183,184,189,],[-26,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,-25,-27,-46,-40,-86,-109,-87,-110,-88,-90,-98,171,171,171,-89,-99,-100,-105,-108,-101,-104,]),'DEFAULT':([26,27,28,29,30,31,32,33,34,35,36,37,38,39,78,79,80,81,82,91,116,128,158,159,162,169,170,174,175,176,179,180,182,183,184,189,],[-26,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,-25,-27,-46,-40,-86,-109,-87,-110,-88,-90,-98,178,-103,-89,-99,-100,178,-102,-105,-108,-101,-104,]),'ELSE':([26,28,29,30,31,32,33,34,35,36,37,38,39,78,80,81,82,91,116,128,158,159,162,174,175,176,184,],[-26,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,-25,-46,-40,-86,-109,-87,-110,166,-90,-98,-89,-99,-100,-101,]),'ATRIBUIR':([50,52,53,93,99,156,],[-8,96,97,-80,-7,-79,]),'LCON':([50,74,96,],[94,94,94,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'topLevel':([0,14,16,],[1,22,24,]),'variableDeclaration':([0,14,16,],[2,2,2,]),'functionSignature':([0,14,16,18,20,27,42,44,47,85,87,88,90,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,114,121,148,149,150,153,154,157,161,166,171,185,187,],[3,3,3,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'declaredIdentifier':([0,14,16,18,27,47,87,148,149,153,166,185,187,],[4,4,4,52,52,52,52,52,52,52,52,52,52,]),'voidOrType':([0,14,16,18,20,27,42,44,47,85,87,88,90,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,114,121,148,149,150,153,154,157,161,166,171,185,187,],[6,6,6,55,73,55,84,84,55,84,55,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,73,84,55,55,84,55,84,84,84,55,84,55,55,]),'type':([0,14,16,18,20,27,42,44,47,85,87,88,90,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,114,121,148,149,150,153,154,157,161,166,171,185,187,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'functionBody':([3,],[16,]),'block':([3,18,27,47,148,149,153,166,185,187,],[17,29,29,29,29,29,29,29,29,29,]),'formalParameterList':([5,21,50,74,99,115,117,],[19,77,19,19,77,77,77,]),'statements':([18,27,185,187,],[25,79,188,189,]),'statement':([18,27,47,148,149,153,166,185,187,],[27,27,89,158,159,162,174,27,27,]),'nonLabelledStatement':([18,27,47,148,149,153,166,185,187,],[28,28,28,28,28,28,28,28,28,]),'expressionStatement':([18,27,47,148,149,153,166,185,187,],[30,30,30,30,30,30,30,30,30,]),'localVariableDeclaration':([18,27,47,87,148,149,153,166,185,187,],[31,31,31,124,31,31,31,31,31,31,]),'returnStatement':([18,27,47,148,149,153,166,185,187,],[32,32,32,32,32,32,32,32,32,]),'ifStatement':([18,27,47,148,149,153,166,185,187,],[33,33,33,33,33,33,33,33,33,]),'forStatement':([18,27,47,148,149,153,166,185,187,],[34,34,34,34,34,34,34,34,34,]),'whileStatement':([18,27,47,148,149,153,166,185,187,],[35,35,35,35,35,35,35,35,35,]),'doStatement':([18,27,47,148,149,153,166,185,187,],[36,36,36,36,36,36,36,36,36,]),'switchStatement':([18,27,47,148,149,153,166,185,187,],[37,37,37,37,37,37,37,37,37,]),'breakStatement':([18,27,47,148,149,153,166,185,187,],[38,38,38,38,38,38,38,38,38,]),'expression':([18,20,27,42,44,47,85,87,88,90,94,96,97,114,121,148,149,150,153,154,157,161,166,171,185,187,],[40,75,40,83,86,40,118,123,125,127,130,132,134,75,151,40,40,130,40,163,130,130,40,181,40,40,]),'initializedVariableDeclaration':([18,27,47,87,148,149,153,166,185,187,],[41,41,41,41,41,41,41,41,41,41,]),'orExpression':([18,20,27,42,44,47,85,87,88,90,94,96,97,114,121,148,149,150,153,154,157,161,166,171,185,187,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'listLiteralID':([18,20,27,42,44,47,85,87,88,90,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,114,121,148,149,150,153,154,157,161,166,171,185,187,],[53,76,53,76,76,53,76,53,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,53,53,76,53,76,76,76,53,76,53,53,]),'andExpression':([18,20,27,42,44,47,85,87,88,90,94,95,96,97,114,121,148,149,150,153,154,157,161,166,171,185,187,],[54,54,54,54,54,54,54,54,54,54,54,131,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'equalityExpression':([18,20,27,42,44,47,85,87,88,90,94,95,96,97,98,114,121,148,149,150,153,154,157,161,166,171,185,187,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,135,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'relacionalExpression':([18,20,27,42,44,47,85,87,88,90,94,95,96,97,98,100,101,114,121,148,149,150,153,154,157,161,166,171,185,187,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,136,137,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'addExpression':([18,20,27,42,44,47,85,87,88,90,94,95,96,97,98,100,101,102,103,104,105,114,121,148,149,150,153,154,157,161,166,171,185,187,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,138,139,140,141,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'multExpression':([18,20,27,42,44,47,85,87,88,90,94,95,96,97,98,100,101,102,103,104,105,106,107,114,121,148,149,150,153,154,157,161,166,171,185,187,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,142,143,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'unaryExpression':([18,20,27,42,44,47,85,87,88,90,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,114,121,148,149,150,153,154,157,161,166,171,185,187,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,144,145,146,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'primary':([18,20,27,42,44,47,85,87,88,90,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,114,121,148,149,150,153,154,157,161,166,171,185,187,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'functionCall':([18,20,27,42,44,47,85,87,88,90,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,114,121,148,149,150,153,154,157,161,166,171,185,187,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'literal':([18,20,27,42,44,47,85,87,88,90,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,114,121,148,149,150,153,154,157,161,166,171,185,187,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'booleanLiteral':([18,20,27,42,44,47,85,87,88,90,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,114,121,148,149,150,153,154,157,161,166,171,185,187,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'normalFormalParameters':([20,114,],[71,147,]),'simpleFormalParameter':([20,114,],[72,72,]),'listLiteral':([50,74,96,],[93,93,133,]),'forLoopParts':([87,],[120,]),'forInitializerStatement':([87,],[121,]),'expressionList':([94,150,157,161,],[129,160,165,167,]),'switchCaseRepetition':([164,170,],[169,180,]),'switchCase':([164,170,172,],[170,170,182,]),'label':([164,169,170,172,179,],[172,179,172,172,179,]),'defaultCase':([169,179,],[177,186,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> topLevel","S'",1,None,None,None),
  ('topLevel -> variableDeclaration PCOMMA','topLevel',2,'p_topLevelDefinition','DartParserAtual.py',8),
  ('topLevel -> variableDeclaration PCOMMA topLevel','topLevel',3,'p_topLevelDefinition','DartParserAtual.py',9),
  ('topLevel -> functionSignature functionBody','topLevel',2,'p_topLevelDefinition','DartParserAtual.py',10),
  ('topLevel -> functionSignature functionBody topLevel','topLevel',3,'p_topLevelDefinition','DartParserAtual.py',11),
  ('variableDeclaration -> declaredIdentifier','variableDeclaration',1,'p_variableDeclaration','DartParserAtual.py',24),
  ('variableDeclaration -> variableDeclaration COMMA ID','variableDeclaration',3,'p_variableDeclaration','DartParserAtual.py',25),
  ('declaredIdentifier -> voidOrType ID','declaredIdentifier',2,'p_declaredIdentifier','DartParserAtual.py',33),
  ('declaredIdentifier -> ID','declaredIdentifier',1,'p_declaredIdentifier','DartParserAtual.py',34),
  ('voidOrType -> type','voidOrType',1,'p_voidOrType','DartParserAtual.py',41),
  ('voidOrType -> VOID','voidOrType',1,'p_voidOrType','DartParserAtual.py',42),
  ('type -> VAR','type',1,'p_type','DartParserAtual.py',50),
  ('type -> INT','type',1,'p_type','DartParserAtual.py',51),
  ('type -> FLOAT','type',1,'p_type','DartParserAtual.py',52),
  ('type -> CHAR','type',1,'p_type','DartParserAtual.py',53),
  ('type -> STRING','type',1,'p_type','DartParserAtual.py',54),
  ('functionSignature -> ID formalParameterList','functionSignature',2,'p_functionSignature','DartParserAtual.py',58),
  ('functionSignature -> voidOrType ID formalParameterList','functionSignature',3,'p_functionSignature','DartParserAtual.py',59),
  ('formalParameterList -> LPAREN RPAREN','formalParameterList',2,'p_formalParameterList','DartParserAtual.py',67),
  ('formalParameterList -> LPAREN normalFormalParameters RPAREN','formalParameterList',3,'p_formalParameterList','DartParserAtual.py',68),
  ('normalFormalParameters -> simpleFormalParameter','normalFormalParameters',1,'p_normalFormalParameters','DartParserAtual.py',76),
  ('normalFormalParameters -> simpleFormalParameter COMMA normalFormalParameters','normalFormalParameters',3,'p_normalFormalParameters','DartParserAtual.py',77),
  ('simpleFormalParameter -> voidOrType ID','simpleFormalParameter',2,'p_simlpleFormalParameter','DartParserAtual.py',85),
  ('simpleFormalParameter -> expression','simpleFormalParameter',1,'p_simlpleFormalParameter','DartParserAtual.py',86),
  ('functionBody -> block','functionBody',1,'p_functionBody','DartParserAtual.py',94),
  ('block -> LCHAV statements RCHAV','block',3,'p_block','DartParserAtual.py',99),
  ('block -> LCHAV RCHAV','block',2,'p_block','DartParserAtual.py',100),
  ('statements -> statement statements','statements',2,'p_statements','DartParserAtual.py',107),
  ('statements -> statement','statements',1,'p_statements','DartParserAtual.py',108),
  ('statement -> nonLabelledStatement','statement',1,'p_statement','DartParserAtual.py',115),
  ('nonLabelledStatement -> block','nonLabelledStatement',1,'p_nonLabelledStatement','DartParserAtual.py',120),
  ('nonLabelledStatement -> expressionStatement','nonLabelledStatement',1,'p_nonLabelledStatement','DartParserAtual.py',121),
  ('nonLabelledStatement -> localVariableDeclaration','nonLabelledStatement',1,'p_nonLabelledStatement','DartParserAtual.py',122),
  ('nonLabelledStatement -> returnStatement','nonLabelledStatement',1,'p_nonLabelledStatement','DartParserAtual.py',123),
  ('nonLabelledStatement -> ifStatement','nonLabelledStatement',1,'p_nonLabelledStatement','DartParserAtual.py',124),
  ('nonLabelledStatement -> forStatement','nonLabelledStatement',1,'p_nonLabelledStatement','DartParserAtual.py',125),
  ('nonLabelledStatement -> whileStatement','nonLabelledStatement',1,'p_nonLabelledStatement','DartParserAtual.py',126),
  ('nonLabelledStatement -> doStatement','nonLabelledStatement',1,'p_nonLabelledStatement','DartParserAtual.py',127),
  ('nonLabelledStatement -> switchStatement','nonLabelledStatement',1,'p_nonLabelledStatement','DartParserAtual.py',128),
  ('nonLabelledStatement -> breakStatement','nonLabelledStatement',1,'p_nonLabelledStatement','DartParserAtual.py',129),
  ('localVariableDeclaration -> initializedVariableDeclaration PCOMMA','localVariableDeclaration',2,'p_localVariableDeclaration','DartParserAtual.py',153),
  ('initializedVariableDeclaration -> declaredIdentifier','initializedVariableDeclaration',1,'p_initializedVariableDeclaration','DartParserAtual.py',158),
  ('initializedVariableDeclaration -> declaredIdentifier ATRIBUIR expression','initializedVariableDeclaration',3,'p_initializedVariableDeclaration','DartParserAtual.py',159),
  ('initializedVariableDeclaration -> declaredIdentifier ATRIBUIR listLiteral','initializedVariableDeclaration',3,'p_initializedVariableDeclaration','DartParserAtual.py',160),
  ('initializedVariableDeclaration -> listLiteralID ATRIBUIR expression','initializedVariableDeclaration',3,'p_initializedVariableDeclaration','DartParserAtual.py',161),
  ('expressionStatement -> PCOMMA','expressionStatement',1,'p_expressionStatement','DartParserAtual.py',174),
  ('expressionStatement -> expression PCOMMA','expressionStatement',2,'p_expressionStatement','DartParserAtual.py',175),
  ('expression -> orExpression','expression',1,'p_expression','DartParserAtual.py',183),
  ('orExpression -> andExpression','orExpression',1,'p_orExpression','DartParserAtual.py',187),
  ('orExpression -> orExpression OR andExpression','orExpression',3,'p_orExpression','DartParserAtual.py',188),
  ('andExpression -> equalityExpression','andExpression',1,'p_andExpression','DartParserAtual.py',196),
  ('andExpression -> andExpression AND equalityExpression','andExpression',3,'p_andExpression','DartParserAtual.py',197),
  ('equalityExpression -> relacionalExpression','equalityExpression',1,'p_equalityExpression','DartParserAtual.py',204),
  ('equalityExpression -> equalityExpression IGUAL relacionalExpression','equalityExpression',3,'p_equalityExpression','DartParserAtual.py',205),
  ('equalityExpression -> equalityExpression NEG relacionalExpression','equalityExpression',3,'p_equalityExpression','DartParserAtual.py',206),
  ('relacionalExpression -> addExpression','relacionalExpression',1,'p_relacionalExpression','DartParserAtual.py',215),
  ('relacionalExpression -> relacionalExpression MENOR addExpression','relacionalExpression',3,'p_relacionalExpression','DartParserAtual.py',216),
  ('relacionalExpression -> relacionalExpression MAIOR addExpression','relacionalExpression',3,'p_relacionalExpression','DartParserAtual.py',217),
  ('relacionalExpression -> relacionalExpression MENORI addExpression','relacionalExpression',3,'p_relacionalExpression','DartParserAtual.py',218),
  ('relacionalExpression -> relacionalExpression MAIORI addExpression','relacionalExpression',3,'p_relacionalExpression','DartParserAtual.py',219),
  ('addExpression -> multExpression','addExpression',1,'p_addExpression','DartParserAtual.py',227),
  ('addExpression -> addExpression SOMA multExpression','addExpression',3,'p_addExpression','DartParserAtual.py',228),
  ('addExpression -> addExpression SUBTRAIR multExpression','addExpression',3,'p_addExpression','DartParserAtual.py',229),
  ('multExpression -> unaryExpression','multExpression',1,'p_multExpression','DartParserAtual.py',237),
  ('multExpression -> multExpression VEZES unaryExpression','multExpression',3,'p_multExpression','DartParserAtual.py',238),
  ('multExpression -> multExpression DIVIDIR unaryExpression','multExpression',3,'p_multExpression','DartParserAtual.py',239),
  ('multExpression -> multExpression RESTO unaryExpression','multExpression',3,'p_multExpression','DartParserAtual.py',240),
  ('unaryExpression -> primary','unaryExpression',1,'p_unaryExpression','DartParserAtual.py',248),
  ('unaryExpression -> functionCall','unaryExpression',1,'p_unaryExpression','DartParserAtual.py',249),
  ('unaryExpression -> unaryExpression SOMASOMA','unaryExpression',2,'p_unaryExpression','DartParserAtual.py',250),
  ('unaryExpression -> unaryExpression SUBSUB','unaryExpression',2,'p_unaryExpression','DartParserAtual.py',251),
  ('functionCall -> functionSignature','functionCall',1,'p_functionCall','DartParserAtual.py',262),
  ('primary -> literal','primary',1,'p_primary','DartParserAtual.py',266),
  ('primary -> LPAREN expression RPAREN','primary',3,'p_primary','DartParserAtual.py',267),
  ('literal -> ID','literal',1,'p_literal','DartParserAtual.py',274),
  ('literal -> booleanLiteral','literal',1,'p_literal','DartParserAtual.py',275),
  ('literal -> listLiteralID','literal',1,'p_literal','DartParserAtual.py',276),
  ('literal -> NUMBER','literal',1,'p_literal','DartParserAtual.py',277),
  ('literal -> LITERAL_STRING','literal',1,'p_literal','DartParserAtual.py',278),
  ('listLiteral -> LCON expressionList RCON','listLiteral',3,'p_listLiteral','DartParserAtual.py',290),
  ('listLiteralID -> ID listLiteral','listLiteralID',2,'p_listLiteralID','DartParserAtual.py',294),
  ('booleanLiteral -> TRUE','booleanLiteral',1,'p_booleanLiteral','DartParserAtual.py',298),
  ('booleanLiteral -> FALSE','booleanLiteral',1,'p_booleanLiteral','DartParserAtual.py',299),
  ('expressionList -> expression COMMA','expressionList',2,'p_expresionList','DartParserAtual.py',307),
  ('expressionList -> expression','expressionList',1,'p_expresionList','DartParserAtual.py',308),
  ('expressionList -> expression COMMA expressionList','expressionList',3,'p_expresionList','DartParserAtual.py',309),
  ('returnStatement -> RETURN PCOMMA','returnStatement',2,'p_returnStatement','DartParserAtual.py',317),
  ('returnStatement -> RETURN expression PCOMMA','returnStatement',3,'p_returnStatement','DartParserAtual.py',318),
  ('ifStatement -> IF LPAREN expression RPAREN statement','ifStatement',5,'p_ifStatement','DartParserAtual.py',323),
  ('ifStatement -> IF LPAREN expression RPAREN statement ELSE statement','ifStatement',7,'p_ifStatement','DartParserAtual.py',324),
  ('forStatement -> FOR LPAREN forLoopParts RPAREN statement','forStatement',5,'p_forStatement','DartParserAtual.py',332),
  ('forLoopParts -> forInitializerStatement PCOMMA','forLoopParts',2,'p_forLoopParts','DartParserAtual.py',337),
  ('forLoopParts -> forInitializerStatement PCOMMA expressionList','forLoopParts',3,'p_forLoopParts','DartParserAtual.py',338),
  ('forLoopParts -> forInitializerStatement expression PCOMMA','forLoopParts',3,'p_forLoopParts','DartParserAtual.py',339),
  ('forLoopParts -> forInitializerStatement expression PCOMMA expressionList','forLoopParts',4,'p_forLoopParts','DartParserAtual.py',340),
  ('forInitializerStatement -> localVariableDeclaration','forInitializerStatement',1,'p_forInitializerStatement','DartParserAtual.py',352),
  ('forInitializerStatement -> PCOMMA','forInitializerStatement',1,'p_forInitializerStatement','DartParserAtual.py',353),
  ('forInitializerStatement -> expression PCOMMA','forInitializerStatement',2,'p_forInitializerStatement','DartParserAtual.py',354),
  ('whileStatement -> WHILE LPAREN expression RPAREN statement','whileStatement',5,'p_whileStatement','DartParserAtual.py',364),
  ('doStatement -> DO statement WHILE LPAREN expression RPAREN PCOMMA','doStatement',7,'p_doStatement','DartParserAtual.py',369),
  ('switchStatement -> SWITCH LPAREN expression RPAREN LCHAV switchCaseRepetition RCHAV','switchStatement',7,'p_switchStatement','DartParserAtual.py',374),
  ('switchStatement -> SWITCH LPAREN expression RPAREN LCHAV switchCaseRepetition defaultCase RCHAV','switchStatement',8,'p_switchStatement','DartParserAtual.py',375),
  ('switchCaseRepetition -> switchCase switchCaseRepetition','switchCaseRepetition',2,'p_switchCaseRepetition','DartParserAtual.py',383),
  ('switchCaseRepetition -> switchCase','switchCaseRepetition',1,'p_switchCaseRepetition','DartParserAtual.py',384),
  ('switchCase -> CASE expression PONTOS statements','switchCase',4,'p_switchCase','DartParserAtual.py',392),
  ('switchCase -> label switchCase','switchCase',2,'p_switchCase','DartParserAtual.py',393),
  ('defaultCase -> DEFAULT PONTOS statements','defaultCase',3,'p_defaultCase','DartParserAtual.py',401),
  ('defaultCase -> label defaultCase','defaultCase',2,'p_defaultCase','DartParserAtual.py',402),
  ('label -> ID PONTOS','label',2,'p_label','DartParserAtual.py',410),
  ('breakStatement -> BREAK PCOMMA','breakStatement',2,'p_breakStatement','DartParserAtual.py',415),
  ('breakStatement -> BREAK ID PCOMMA','breakStatement',3,'p_breakStatement','DartParserAtual.py',416),
]
